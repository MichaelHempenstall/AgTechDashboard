@model IEnumerable<DairyDashboard.Models.Farm>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script>
        var PieChartData =
        {
            
        }
    </script>
</head>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FarmName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Select Farm
        </button>
        <div class="dropdown-menu">
            @foreach (var item in Model)
            {
                <a class="dropdown-item" href="#">@Html.DisplayFor(modelItem => item.FarmName)</a>
            }
        </div>
        <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Select Farm
        </button>
        <div class="dropdown-menu">
            @foreach (var item in Model)
            {
                <a class="dropdown-item" href="#">@Html.DisplayFor(modelItem => item.FarmName)</a>
            }
        </div>
        
        <div class="container">
            <div class="row">
                <div class="col-sm">
                    <div class="card">
                        <div class="card-body">
                            <img src="@Url.Action("CreatePie")" alt="Pie Chart using MVC" />
                        </div>
                    </div>
                </div>
                <div class="col-sm">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chPie2"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-sm">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chPie3"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-sm">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chPie4"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container" id="lineCharts">
            <canvas id="chLine"></canvas>
        </div>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FarmName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@*<script>
    var colors = ['#007bff', '#28a745', '#333333', '#c3e6cb', '#dc3545', '#6c757d'];

                /* large line chart */
                var chLine = document.getElementById("chLine");
                var chartData = {
                    labels: ["S", "M", "T", "W", "T", "F", "S"],
                    datasets: [{
                        data: [589, 445, 483, 503, 689, 692, 634],
                        backgroundColor: 'transparent',
                        borderColor: colors[0],
                        borderWidth: 4,
                        pointBackgroundColor: colors[0]
                    }
                        //   {
                        //     data: [639, 465, 493, 478, 589, 632, 674],
                        //     backgroundColor: colors[3],
                        //     borderColor: colors[1],
                        //     borderWidth: 4,
                        //     pointBackgroundColor: colors[1]
                        //   }
                    ]
                };
                if(chLine) {
                    new Chart(chLine, {
                        type: 'line',
                        data: chartData,
                        options: {
                            scales: {
                                xAxes: [{
                                    ticks: {
                                        beginAtZero: false
                                    }
                                }]
                            },
                            legend: {
                                display: false
                            },
                            responsive: true
                        }
                    });
                }

    /* large pie/donut chart */
    var chPie = document.getElementById("chPie1");
                if(chPie) {
                    new Chart(chPie, {
                        type: 'pie',
                        data: {
                            labels: ['Desktop', 'Phone', 'Tablet', 'Unknown'],
                            datasets: [
                                {
                                    backgroundColor: [colors[1], colors[0], colors[2], colors[5]],
                                    borderWidth: 0,
                                    data: [50, 40, 15, 5]
                                }
                            ]
                        },
                        plugins: [{
                            beforeDraw: function (chart) {
                                var width = chart.chart.width,
                                    height = chart.chart.height,
                                    ctx = chart.chart.ctx;
                                ctx.restore();
                                var fontSize = (height / 70).toFixed(2);
                                ctx.font = fontSize + "em sans-serif";
                                ctx.textBaseline = "middle";
                                var text = chart.config.data.datasets[0].data[0] + "%",
                                    textX = Math.round((width - ctx.measureText(text).width) / 2),
                                    textY = height / 2;
                                ctx.fillText(text, textX, textY);
                                ctx.save();
                            }
                        }],
                        options: { layout: { padding: 0 }, legend: { display: false }, cutoutPercentage: 80 }
                    });
                }
    var chPie2 = document.getElementById("chPie2");
    if (chPie2) {
        new Chart(chPie2, {
            type: 'pie',
            data: {
                labels: ['Desktop', 'Phone', 'Tablet', 'Unknown'],
                datasets: [
                    {
                        backgroundColor: [colors[1], colors[0], colors[2], colors[5]],
                        borderWidth: 0,
                        data: [50, 40, 15, 5]
                    }
                ]
            },
            plugins: [{
                beforeDraw: function (chart) {
                    var width = chart.chart.width,
                        height = chart.chart.height,
                        ctx = chart.chart.ctx;
                    ctx.restore();
                    var fontSize = (height / 70).toFixed(2);
                    ctx.font = fontSize + "em sans-serif";
                    ctx.textBaseline = "middle";
                    var text = chart.config.data.datasets[0].data[0] + "%",
                        textX = Math.round((width - ctx.measureText(text).width) / 2),
                        textY = height / 2;
                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
            }],
            options: { layout: { padding: 0 }, legend: { display: false }, cutoutPercentage: 80 }
        });
    }

</script>*@